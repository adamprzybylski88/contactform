const fs = require('fs')
const colors = require('colors')

const applyDefaults = require('./apply-defaults');

const fileSize = require('./file-size');
const progressCount = require('./progress-count');
const sizeDecreasePercent = require('./size-decrease-percent');
const timeNow = require('./time-now');


colors.setTheme({
	sizeColor: ['strikethrough', 'bold', 'dim'],
	compressedSizeColor: ['bold'],
	arrowColor: ['cyan'],
	fileColor: ['italic']
});

module.exports = function displayProgress(count, length, input, output, outputFileName) {
	var progress, cp, cp_int;

	cp = sizeDecreasePercent(input, output);
	cp_int = parseInt(cp);

	switch (true) {
		case (cp_int > 0):
			cp = '+'.red + cp.red
			break;
		case (cp_int > -15):
			cp = cp.red
			break;
		case (cp_int > -50):
			cp = cp.yellow
			break;
		case (cp_int > -100):
			cp = cp.green
			break;
	}

	if (count === false) {
		console.log(
			'[' + timeNow().dim + ']         ' +
			input.fileColor +
			' ' + fileSize(input, {
				interpreter: true
			}).sizeColor + ' => '.arrowColor + output.fileColor + ' '
			+ fileSize(output, {
				interpreter: true
			}).compressedSizeColor + ' ' + `| ${cp} |`
		)

	} else {
		progress = progressCount(count, length);

		console.log(
			'[' + timeNow().dim + ']' +
			'['.cyan + progress.dim + '%'.dim + ']'.cyan, input.fileColor +
			' ' + fileSize(input, {
				interpreter: true
			}).sizeColor + ' => '.arrowColor + output.fileColor + ' '
			+ fileSize(output, {
				interpreter: true
			}).compressedSizeColor + ' ' + `| ${cp} |`
		)
	}
}